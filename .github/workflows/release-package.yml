name: Release package
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Release type (one of): patch, minor, major, prepatch, preminor, premajor, prerelease"
        required: true
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
        with:
          clean: true
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Git configuration
        run: |
          git config --global user.email "902348742+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
      - name: Change release version
        run: npm version ${{ env.RELEASE_TYPE }}
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}
      - name: Install Packages
        run: yarn install
      - name: Build the package
        run: yarn build:package
      - name: .npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_PUBLISHING_TOKEN }}" > dist/.npmrc
      - name: Publish the package
        run: cd dist && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push changes to repository
        run: git push origin dev && git push --tags
      # copied from gh-pages
      - name: prepare 0
        run: touch .version && touch .githash && yarn run postversion
      - name: prepare 1 (version stuff)
        run: VERSION=`cat .version`; sed -i "s/%LIB_VERSION%/$VERSION/" src/version.js
      - name: prepare 2 (hash stuff)
        run: HASH=`cat .githash`; sed -i "s/%LIB_HASH%/$HASH/" src/version.js
      - name: prepare 3 (gitdescribe stuff)
        run: DESCRIBE=`cat .gitdescribe`; sed -i "s/%LIB_DESCRIBE%/$DESCRIBE/" src/version.js
      - name: debug version.js
        run: cat src/version.js
      - name: Build page
        run: yarn run build
        env:
          CI: false
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
      - name: show deployed folder
        run: ls build
